import { Context } from "telegraf";
import { UsersEntity } from '../../database/entities/Users.entity';
import { sendOrEditMessage } from "../../messages";

export const info = async (ctx: Context, user: UsersEntity): Promise<void> => {

  const GroupName = user.Group ? user.Group.Name : "–ù–µ –≤—ã–±—Ä–∞–Ω–∞!";
  const GroupText = user.Group ? "" : "‚ö†–î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.";

  const NotificationStatus = user.NotificationStatus ? "‚úÖ–í–∫–ª—é—á–µ–Ω—ã" : "‚ùå–í—ã–∫–ª—é—á–µ–Ω—ã";
  const NotificationText = user.NotificationStatus ? "" : "‚ö†–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.";
  const buttonText = user.NotificationStatus ? "‚ùå–í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" : "‚úÖ–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è";

  await sendOrEditMessage(ctx, `–í–∞—à–∞ –≥—Ä—É–ø–ø–∞: ${GroupName}\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${NotificationStatus}\n\n${GroupText}\n\n${NotificationText}`,{
    reply_markup: {
      inline_keyboard: [
        [ { text: "üõé–ü–æ—Å–º–æ—Ç—Ä –∑–∞–º–µ–Ω", callback_data: "/replacements"}],
        [ { text: buttonText, callback_data: "/notification"} ],
        [ { text: `‚¨Ö–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é`, callback_data: `/start` }]
      ]
    }
  });
};

