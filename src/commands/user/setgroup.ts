import { Context } from "telegraf";
import { UsersEntity } from '../../database/entities/Users.entity';
import { getRepository } from "typeorm";
import { GroupsEntity } from "../../database/entities/Groups.entity";
import { sendOrEditMessage } from "../../messages";

export const setgroup = async (ctx: Context, user: UsersEntity, idStr: string): Promise<void> => {

  const groupID = parseInt(idStr);

  if(isNaN(groupID)) return;

  const group = await getRepository(GroupsEntity).findOne({ID: groupID});
  if(!group) return;

  user.Group = group;
  await user.save();

  await sendOrEditMessage(ctx, `–í—ã –∏–∑–º–µ–Ω–∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä\n–í–∞—à–∞ –≥—Ä—É–ø–ø–∞: ${group.Name}`,{
    reply_markup: {
      inline_keyboard: [
        [ { text: "üö™–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ", callback_data: "/info" }],
        [ { text: "‚¨Ö–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "/start" }],
      ]
    }
  });
};

